# 测试R型指令前递单元（寄存器x1=1, x2=2...x31=31）
# 所有运算结果均基于寄存器初始编号计算

# 阶段1：EX→EX前递（相邻指令）
add x5, x1, x2    # x5 = x1 + x2 = 1+2=3 (RAW冒险点)
sub x6, x5, x3    # x6 = 3-3=0 ← 需要前递x5的结果

# 阶段2：EX→EX前递（非连续指令）
and x7, x5, x4    # x7 = 3 & 4=0
or  x8, x7, x5    # x8 = 0 | 3=3 ← 需要前递x7和x5

# 阶段3：MEM→EX前递（间隔指令）
xor x9, x8, x6    # x9 = 3 ^ 0=3
sll x10, x9, x2   # x10=3 << 2=12 ← 需要前递x9

# 阶段4：多级前递组合测试
srl x11, x10, x1  # x11=12 >> 1=6
add x12, x11, x9   # x12=6+3=9 ← 同时需要x11和x9

# 阶段5：复杂逻辑验证
slt x13, x12, x10 # x13= (9<12)=1
xor x14, x13, x12  # x14=1 ^ 9= 0b0001^1001=0b1000=8
and x15, x14, x10  # x15=8 & 12= 8
